
tcfail071.hs:9:0:
    Contexts differ in length
      (Use -fglasgow-exts to allow this)
    When matching the contexts of the signatures for
      f :: forall d. (Ord d) => d -> d
      g :: forall e. e -> e
    The signature contexts in a mutually recursive group should all be identical
    When generalising the type(s) for f, g

tcfail071.hs:10:19:
    Couldn't match expected type `a -> b -> b'
	   against inferred type `e'
      `e' is a rigid type variable bound by
	  the type signature for `g' at tcfail071.hs:8:5
    In the first argument of `foldr', namely `(f c)'
    In the expression: foldr (f c) [] []
    In the definition of `p': p = foldr (f c) [] []
