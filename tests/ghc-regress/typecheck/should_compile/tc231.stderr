TYPE SIGNATURES
    foo :: forall b s t1. (Zork s (Z [Char]) b) => Q s (Z [Char]) t1 -> ST s ()
    s :: forall t t1. Q t (Z [Char]) t1 -> Q t (Z [Char]) t1
TYPE CONSTRUCTORS
    data Q s a chain
	RecFlag NonRecursive
	Generics: no
	= Node :: forall s a chain. s -> a -> chain -> Q s a chain Stricts: _ _ _
	FamilyInstance: none
    data Z a
	RecFlag NonRecursive
	Generics: no
	= Z :: forall a. a -> Z a Stricts: _
	FamilyInstance: none
Tycons with generics:
Dependent modules: []
Dependent packages: [base]
