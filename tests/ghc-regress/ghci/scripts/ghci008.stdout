class (Eq a, Show a) => Num a where
  (+) :: a -> a -> a
  ...
  	-- Imported from GHC.Num
infixl 6 +
class (Eq a, Show a) => Num a where
  (+) :: a -> a -> a
  ...
  	-- Imported from GHC.Num
infixl 6 +
data Data.Complex.Complex a = !a Data.Complex.:+ !a
  	-- Imported from Data.Complex
infix 6 Data.Complex.:+
data Data.Complex.Complex a = !a Data.Complex.:+ !a
  	-- Imported from Data.Complex
infix 6 Data.Complex.:+
class (RealFrac a, Floating a) => RealFloat a where
  floatRadix :: a -> Integer
  floatDigits :: a -> Int
  floatRange :: a -> (Int, Int)
  decodeFloat :: a -> (Integer, Int)
  encodeFloat :: Integer -> Int -> a
  exponent :: a -> Int
  significand :: a -> a
  scaleFloat :: Int -> a -> a
  isNaN :: a -> Bool
  isInfinite :: a -> Bool
  isDenormalized :: a -> Bool
  isNegativeZero :: a -> Bool
  isIEEE :: a -> Bool
  atan2 :: a -> a -> a
  	-- Imported from GHC.Float
instance RealFloat Double -- Imported from GHC.Float
instance RealFloat Float -- Imported from GHC.Float
Data.List.isPrefixOf :: (Eq a) => [a] -> [a] -> Bool
  	-- Imported from Data.List
