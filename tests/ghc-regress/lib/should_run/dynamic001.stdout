*** Testing: toDyn ***
[ <<GHC.Types.Int>>
, <<GHC.Types.Char>>
, <<GHC.Types.Bool>>
, <<GHC.Types.Float>>
, <<GHC.Types.Double>>
, <<GHC.Integer.Type.Integer>>
, <<GHC.Types.IO ()>>
, <<[Data.Dynamic.Dynamic]>>
, <<[GHC.Types.Int]>>
, <<Data.Maybe.Maybe GHC.Types.Int>>
, <<Data.Maybe.Maybe GHC.Types.Int>>
, <<Data.Maybe.Maybe GHC.Types.Int>>
, <<Data.Either.Either GHC.Types.Int GHC.Types.Bool>>
, <<Data.Either.Either GHC.Types.Char GHC.Types.Int>>
, <<()>>
, <<GHC.Ordering.Ordering>>
, <<((),GHC.Types.Int)>>
, <<((),GHC.Types.Int,GHC.Types.Char)>>
, <<((),GHC.Types.Int,GHC.Types.Char,GHC.Types.Double)>>
, <<((),GHC.Types.Int,GHC.Types.Char,GHC.Types.Double,(Data.Maybe.Maybe GHC.Types.Bool))>>
, <<GHC.Types.Int -> GHC.Types.Int -> GHC.Types.Int>>
, <<GHC.Integer.Type.Integer -> GHC.Integer.Type.Integer -> GHC.Integer.Type.Integer>>
, <<[GHC.Types.Char] -> [GHC.Types.Char] -> [GHC.Types.Char]>>
]
*** Testing: fromDyn ***
1
0
'a'
1.0
0
3.0
0
5
False
[1,3,5]
Just True
Left True
LT
False
4
[1,2]
