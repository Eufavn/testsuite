
Simple14.hs:17:12:
    Couldn't match expected type `z0' with actual type `n'
      `z0' is untouchable
           inside the constraints (Maybe m ~ Maybe n)
           bound at a type expected by the context:
                      Maybe m ~ Maybe n => EQ_ z0 z0
      `n' is a rigid type variable bound by
          the type signature for foo :: EQ_ (Maybe m) (Maybe n)
          at Simple14.hs:17:1
    The type variable `z0' is ambiguous
    Possible fix: add a type signature that fixes these type variable(s)
    In the second argument of `eqE', namely `(eqI :: EQ_ m n)'
    In the first argument of `ntI', namely `(`eqE` (eqI :: EQ_ m n))'
    In the expression: ntI (`eqE` (eqI :: EQ_ m n))
